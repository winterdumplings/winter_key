.container {
  display: flex;
  height: 100%;
  flex-direction: column;
  overflow: hidden;
  background-color: #fff;
}

.timer_main ,.timer_runing{
  position: relative;
  display: flex;
  flex: 2;
  justify-content: center;
  align-items: center;
  text-align: center;
  background-color: #2CC2C3;
  border-radius: 30%;
  transition: all .5s;
  z-index: 1;
  padding: 10px 0;
}
/* 时钟背景 */
.timer_time-wrap,.timer_runing-wrap {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 220px;
  height: 220px;
  text-align: center;
  transition: all .3s;
}

.timer_progress_mask,.timer_runing_mask {
  position: absolute;
  display:flex;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  margin: 0 auto;
  border: 3px solid #2CC2C3;
  opacity: .5;
  border-radius: 50%;
}

.progress_bg, .progress_active{
  position:absolute;
  left: 0;
  top: 0;
  width : 150px;
  height: 150px;
}

.button_container{
  position: fixed;
  display: flex;
  width:300rpx;
  height:80rpx;
  text-align: 0 auto;
  margin: 0 auto;
  text-align: center;
  border: #2CC2C3;
  border: none;
}
.button_container::after{
  border: none;
  border-radius: 0;
}

.clock_text{
  position: relative;
  display: flex;
  width:350rpx;
  height:100rpx;
  line-height: 80rpx;
  font-size: 45px;
  color: rgb(248, 245, 245);
  margin: 0 auto;
  text-align: center;
}

.timer_time {
  z-index: 500;
  position: fixed;
  display: flex;
  width:215px;
  height:80rpx;
  left: 90px;
  line-height: 80rpx;
  font-size: 50px;
  color: rgb(248, 245, 245);
  margin: 0 auto;
  text-align: center;
}

.timer_taskName {
  position: absolute;
  display: flex;
  overflow: hidden;
  top: -10px;
  font-size: 14px;
  letter-spacing: 5px;
  background-color:brown;
  color: rgb(30, 230, 230);
}

.timer_done {
  width: 250px;
  height: 250px;
  z-index:1000;
}

.background{
  width: 100%;
  height: 100%;
  position: fixed;/*fixed属性值的解释：相对于我们当前的界面进行绝对定位，不随屏幕的滑动而滑动*/
  top: 0;/*top=0和left=0的作用是确认组件4个定点的一个坐标，如果不进行确认则该组件前面的组件会影响它*/
  left: 0;
  background: #2CC2C3;
  /* opacity: 0.2;设置背景的透明度（取值范围为0~1） */
  /* overflow: hidden;该属性的功能是隐藏溢出，就是当我们现在的这个组件里面有其他组件，并且其他组件的宽或者高大于我们当前组件的宽或高时（按照正常情况，父组件的宽高都为0，没有被子组件撑起来，故不会显示），正常显示子组件，并同时正常显示父组件 */
  z-index: 1000;/*堆叠顺序,有时候我们设置的组件可能会有重叠的部分，那重叠的部分到底是显示哪一个组件呢？这就得靠我们的z-index属性了，z-index的属性值越高则它就越容易显示在我们的页面。注意点：只有在我们设置了position属性时，z-index才会起效果，否则是不会出现效果的*/
}

.box{
    height: 100%;/*设置弹窗的宽和高*/
    width: 100%;
    /* overflow: hidden;隐藏溢出 */
    position: fixed;/*以当前页面为参考物，进行页面的固定*/
    bottom: 0;/*4个定点中一个定点的确认*/
    left: 0;
    z-index: 2000;/*堆叠顺序*/
    background: #2CC2C3;/*背景颜色*/
    text-align: center;/*组件内部字体居中*/
}


.timer_inputname {
  position: absolute;
  bottom: -40px;
  width: 200%;
  text-align: center;
  font-size: 20px;
  height: 20px;
  padding-left: 10px;
  border-bottom: 1px solid #f2f2f2;
  color: #999;
}

.timer_footer {
  position: relative;
  top:20px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  padding-top: 40px;
  transition: all .3s;
}

.timer_ctrl {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-size: 20px;
  color: #fff;
  width: 100px;
  height: 100px;
  margin: 0 20px;
  border-radius: 60%;
  transition: all .7s;
  background-color: #48c23d;
}
.picker{
  position: fixed;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  font-size: 50px;
  color: #fff;
  width: 200px;
  height: 200px;
  margin: 80px 90px;
  border-radius: 50%;
  transition: all .7s;
  background-color: #9cdf31;
}

.Btns{
  position: fixed;
  left: 116px;
  top:400px;
  bottom: -40%;

}
.Btns .okBtn,.Btns .pauseBtn,.Btns .continueBtn ,.Btns .cancleBtn {
  text-align: center;
  width:280rpx;
  height:80rpx;
  line-height:80rpx;
  color:rgb(239, 239, 240);
  background-color: rgb(0, 158, 250);
  border:3rpx solid  aqua;
  border-radius: 20rpx;
  margin:0 auto 20rpx auto;
}
